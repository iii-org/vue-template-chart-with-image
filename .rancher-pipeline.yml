stages:
- name: Publish--vuejs image
  steps:
  - publishImageConfig:
      dockerfilePath: ./Dockerfile
      buildContext: .
      tag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_REPO_NAME}:${CICD_GIT_BRANCH}-${CICD_GIT_COMMIT}
      pushRemote: true
      registry: 10.20.0.73:5443
    env:
      PLUGIN_BUILD_ARGS: --progress=tty --network=host
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_MIRROR: https://10.20.0.73:5443
      PLUGIN_MTU: "1000"
    when:
      branch:
        include:
        - master
- name: Publish--vuejs image on-build
  steps:
  - publishImageConfig:
      dockerfilePath: ./Dockerfile.onbuild
      buildContext: .
      tag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_REPO_NAME}:${CICD_GIT_BRANCH}
      pushRemote: true
      registry: 10.20.0.73:5443
    env:
      PLUGIN_BUILD_ARGS: --progress=tty --network=host
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_MIRROR: https://10.20.0.73:5443
      PLUGIN_MTU: "1000"
    when:
      branch:
        include:
        - on-build
- name: Publish--vuejs image develop
  steps:
  - publishImageConfig:
      dockerfilePath: ./Dockerfile.develop
      buildContext: .
      tag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_REPO_NAME}:${CICD_GIT_BRANCH}-${CICD_GIT_COMMIT}
      pushRemote: true
      registry: 10.20.0.73:5443
    env:
      PLUGIN_BUILD_ARGS: --progress=tty --network=host
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_MIRROR: https://10.20.0.73:5443
      PLUGIN_MTU: "1000"
    when:
      branch:
        include:
        - develop
- name: deploy--vuejs deployment and service on kubernetes
  steps:
  - applyYamlConfig:
      path: ./k8s-yaml/vuejs-deployment.yaml
    when:
      branch:
        include:
        - master
        - develop
  - applyYamlConfig:
      path: ./k8s-yaml/vuejs-service.yaml
    when:
      branch:
        include:
        - master
        - develop
- name: Code Review--run Checkmarx test
  steps:
  - runScriptConfig:
      image: 10.20.0.73:5443/dockerhub/iiiorg/checkmarx-runner:latest
      shellScript: ln -s "$(pwd)" /usr/src/app/repo; cd /usr/src/app; ls; echo ${api_orign};node
        app.js;
    env:
      git_branch: ${CICD_GIT_BRANCH}
      git_commit_id: ${CICD_GIT_COMMIT}
      git_url: ${CICD_GIT_URL}
      verbose: "true"
    envFrom:
    - sourceName: nexus
      sourceKey: api-origin
      targetKey: api_origin
    - sourceName: nexus
      sourceKey: username
      targetKey: api_username
    - sourceName: nexus
      sourceKey: password
      targetKey: api_password
    - sourceName: checkmarx
      sourceKey: username
      targetKey: username
    - sourceName: checkmarx
      sourceKey: password
      targetKey: password
    - sourceName: checkmarx
      sourceKey: check-interval
      targetKey: check_interval
    - sourceName: checkmarx
      sourceKey: client-secret
      targetKey: client_secret
    - sourceName: checkmarx
      sourceKey: cm-url
      targetKey: cm_url
    when:
      branch:
        include:
        - master
notification: {}
